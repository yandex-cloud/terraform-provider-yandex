// Code generated by tfgen. DO NOT EDIT.

package yandex_kms_symmetric_key

import (
	"context"
	"time"

	"github.com/hashicorp/terraform-plugin-framework-timeouts/resource/timeouts"
	"github.com/hashicorp/terraform-plugin-framework/attr"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"
	kms "github.com/yandex-cloud/go-genproto/yandex/cloud/kms/v1"
	"github.com/yandex-cloud/terraform-provider-yandex/pkg/converter"
)

type yandexKMSSymmetricKeyModel struct {
	CreatedAt          types.String   `tfsdk:"created_at"`
	DefaultAlgorithm   types.String   `tfsdk:"default_algorithm"`
	DeletionProtection types.Bool     `tfsdk:"deletion_protection"`
	Description        types.String   `tfsdk:"description"`
	FolderId           types.String   `tfsdk:"folder_id"`
	Labels             types.Map      `tfsdk:"labels"`
	Name               types.String   `tfsdk:"name"`
	RotatedAt          types.String   `tfsdk:"rotated_at"`
	RotationPeriod     types.String   `tfsdk:"rotation_period"`
	Status             types.String   `tfsdk:"status"`
	SymmetricKeyId     types.String   `tfsdk:"symmetric_key_id"`
	ID                 types.String   `tfsdk:"id"`
	Timeouts           timeouts.Value `tfsdk:"timeouts"`
}

func (m *yandexKMSSymmetricKeyModel) GetCreatedAt() types.String {
	return m.CreatedAt
}
func (m *yandexKMSSymmetricKeyModel) GetDefaultAlgorithm() types.String {
	return m.DefaultAlgorithm
}
func (m *yandexKMSSymmetricKeyModel) GetDeletionProtection() types.Bool {
	return m.DeletionProtection
}
func (m *yandexKMSSymmetricKeyModel) GetDescription() types.String {
	return m.Description
}
func (m *yandexKMSSymmetricKeyModel) GetFolderId() types.String {
	return m.FolderId
}
func (m *yandexKMSSymmetricKeyModel) GetLabels() types.Map {
	return m.Labels
}
func (m *yandexKMSSymmetricKeyModel) GetName() types.String {
	return m.Name
}
func (m *yandexKMSSymmetricKeyModel) GetRotatedAt() types.String {
	return m.RotatedAt
}
func (m *yandexKMSSymmetricKeyModel) GetRotationPeriod() types.String {
	return m.RotationPeriod
}
func (m *yandexKMSSymmetricKeyModel) GetStatus() types.String {
	return m.Status
}
func (m *yandexKMSSymmetricKeyModel) GetSymmetricKeyId() types.String {
	return m.SymmetricKeyId
}
func (m *yandexKMSSymmetricKeyModel) GetID() types.String {
	return m.ID
}

func NewYandexKMSSymmetricKeyModel() yandexKMSSymmetricKeyModel {
	return yandexKMSSymmetricKeyModel{
		CreatedAt:          types.StringNull(),
		DefaultAlgorithm:   types.StringNull(),
		DeletionProtection: types.BoolNull(),
		Description:        types.StringNull(),
		FolderId:           types.StringNull(),
		Labels:             types.MapNull(types.StringType),
		Name:               types.StringNull(),
		RotatedAt:          types.StringNull(),
		RotationPeriod:     types.StringNull(),
		Status:             types.StringNull(),
		SymmetricKeyId:     types.StringNull(),
		ID:                 types.StringNull(),
	}
}

func yandexKMSSymmetricKeyModelFillUnknown(target yandexKMSSymmetricKeyModel) yandexKMSSymmetricKeyModel {
	if target.CreatedAt.IsUnknown() || target.CreatedAt.IsNull() {
		target.CreatedAt = types.StringNull()
	}
	if target.DefaultAlgorithm.IsUnknown() || target.DefaultAlgorithm.IsNull() {
		target.DefaultAlgorithm = types.StringNull()
	}
	if target.DeletionProtection.IsUnknown() || target.DeletionProtection.IsNull() {
		target.DeletionProtection = types.BoolNull()
	}
	if target.Description.IsUnknown() || target.Description.IsNull() {
		target.Description = types.StringNull()
	}
	if target.FolderId.IsUnknown() || target.FolderId.IsNull() {
		target.FolderId = types.StringNull()
	}
	if target.Labels.IsUnknown() || target.Labels.IsNull() {
		target.Labels = types.MapNull(types.StringType)
	}
	if target.Name.IsUnknown() || target.Name.IsNull() {
		target.Name = types.StringNull()
	}
	if target.RotatedAt.IsUnknown() || target.RotatedAt.IsNull() {
		target.RotatedAt = types.StringNull()
	}
	if target.RotationPeriod.IsUnknown() || target.RotationPeriod.IsNull() {
		target.RotationPeriod = types.StringNull()
	}
	if target.Status.IsUnknown() || target.Status.IsNull() {
		target.Status = types.StringNull()
	}
	if target.SymmetricKeyId.IsUnknown() || target.SymmetricKeyId.IsNull() {
		target.SymmetricKeyId = types.StringNull()
	}
	if target.ID.IsUnknown() || target.ID.IsNull() {
		target.ID = types.StringNull()
	}
	return target
}

var yandexKMSSymmetricKeyModelType = types.ObjectType{
	AttrTypes: map[string]attr.Type{
		"created_at":          types.StringType,
		"default_algorithm":   types.StringType,
		"deletion_protection": types.BoolType,
		"description":         types.StringType,
		"folder_id":           types.StringType,
		"labels":              types.MapType{ElemType: types.StringType},
		"name":                types.StringType,
		"rotated_at":          types.StringType,
		"rotation_period":     types.StringType,
		"status":              types.StringType,
		"symmetric_key_id":    types.StringType,
		"id":                  types.StringType,
		"timeouts":            timeouts.BlockAll(context.Background()).Type(),
	},
}

func flattenYandexKMSSymmetricKey(ctx context.Context,
	yandexKMSSymmetricKey *kms.SymmetricKey,
	state yandexKMSSymmetricKeyModel,
	to timeouts.Value,
	diags *diag.Diagnostics) types.Object {
	if yandexKMSSymmetricKey == nil {
		return types.ObjectNull(yandexKMSSymmetricKeyModelType.AttrTypes)
	}
	value, diag := types.ObjectValueFrom(ctx, yandexKMSSymmetricKeyModelType.AttrTypes, yandexKMSSymmetricKeyModel{
		CreatedAt:          types.StringValue(yandexKMSSymmetricKey.GetCreatedAt().AsTime().Format(time.RFC3339)),
		DefaultAlgorithm:   types.StringValue(yandexKMSSymmetricKey.GetDefaultAlgorithm().String()),
		DeletionProtection: types.BoolValue(yandexKMSSymmetricKey.GetDeletionProtection()),
		Description:        types.StringValue(yandexKMSSymmetricKey.GetDescription()),
		FolderId:           types.StringValue(yandexKMSSymmetricKey.GetFolderId()),
		Labels:             flattenYandexKMSSymmetricKeyLabels(ctx, yandexKMSSymmetricKey.GetLabels(), state.Labels, diags),
		Name:               types.StringValue(yandexKMSSymmetricKey.GetName()),
		RotatedAt:          types.StringValue(yandexKMSSymmetricKey.GetRotatedAt().AsTime().Format(time.RFC3339)),
		RotationPeriod:     types.StringValue(converter.GetDuration(yandexKMSSymmetricKey.GetRotationPeriod(), state.RotationPeriod.ValueString(), diags)),
		Status:             types.StringValue(yandexKMSSymmetricKey.GetStatus().String()),
		SymmetricKeyId:     types.StringValue(yandexKMSSymmetricKey.GetId()),
		ID:                 types.StringValue(yandexKMSSymmetricKey.GetId()),
		Timeouts:           to,
	})
	diags.Append(diag...)
	return value
}

func expandYandexKMSSymmetricKey(ctx context.Context, yandexKMSSymmetricKeyState types.Object, diags *diag.Diagnostics) *kms.SymmetricKey {
	if yandexKMSSymmetricKeyState.IsNull() || yandexKMSSymmetricKeyState.IsUnknown() {
		return nil
	}
	var yandexKMSSymmetricKey yandexKMSSymmetricKeyModel
	diags.Append(yandexKMSSymmetricKeyState.As(ctx, &yandexKMSSymmetricKey, basetypes.ObjectAsOptions{UnhandledNullAsEmpty: true, UnhandledUnknownAsEmpty: true})...)
	if diags.HasError() {
		return nil
	}
	return expandYandexKMSSymmetricKeyModel(ctx, yandexKMSSymmetricKey, diags)
}

func expandYandexKMSSymmetricKeyModel(ctx context.Context, yandexKMSSymmetricKeyState yandexKMSSymmetricKeyModel, diags *diag.Diagnostics) *kms.SymmetricKey {
	value := &kms.SymmetricKey{}
	value.SetCreatedAt(converter.ParseTimestamp(yandexKMSSymmetricKeyState.CreatedAt.ValueString(), diags))
	value.SetDefaultAlgorithm(kms.SymmetricAlgorithm(kms.SymmetricAlgorithm_value[yandexKMSSymmetricKeyState.DefaultAlgorithm.ValueString()]))
	value.SetDeletionProtection(yandexKMSSymmetricKeyState.DeletionProtection.ValueBool())
	value.SetDescription(yandexKMSSymmetricKeyState.Description.ValueString())
	value.SetFolderId(yandexKMSSymmetricKeyState.FolderId.ValueString())
	value.SetLabels(expandYandexKMSSymmetricKeyLabels(ctx, yandexKMSSymmetricKeyState.Labels, diags))
	value.SetName(yandexKMSSymmetricKeyState.Name.ValueString())
	value.SetRotatedAt(converter.ParseTimestamp(yandexKMSSymmetricKeyState.RotatedAt.ValueString(), diags))
	value.SetRotationPeriod(converter.ParseDuration(yandexKMSSymmetricKeyState.RotationPeriod.ValueString(), diags))
	value.SetStatus(kms.SymmetricKey_Status(kms.SymmetricKey_Status_value[yandexKMSSymmetricKeyState.Status.ValueString()]))
	value.SetId(yandexKMSSymmetricKeyState.SymmetricKeyId.ValueString())
	value.SetId(yandexKMSSymmetricKeyState.SymmetricKeyId.ValueString())
	if diags.HasError() {
		return nil
	}
	return value
}

func flattenYandexKMSSymmetricKeyLabels(ctx context.Context, yandexKMSSymmetricKeyLabels map[string]string, listState types.Map, diags *diag.Diagnostics) types.Map {
	if yandexKMSSymmetricKeyLabels == nil {
		if !listState.IsNull() && !listState.IsUnknown() && len(listState.Elements()) == 0 {
			return listState
		}
		return types.MapNull(types.StringType)
	}
	yandexKMSSymmetricKeyLabelsValues := make(map[string]attr.Value)
	for k, elem := range yandexKMSSymmetricKeyLabels {
		val := types.StringValue(elem)
		yandexKMSSymmetricKeyLabelsValues[k] = val
	}

	value, diag := types.MapValue(types.StringType, yandexKMSSymmetricKeyLabelsValues)
	diags.Append(diag...)
	return value
}

func expandYandexKMSSymmetricKeyLabels(ctx context.Context, yandexKMSSymmetricKeyLabelsState types.Map, diags *diag.Diagnostics) map[string]string {
	if yandexKMSSymmetricKeyLabelsState.IsNull() || yandexKMSSymmetricKeyLabelsState.IsUnknown() {
		return nil
	}
	if len(yandexKMSSymmetricKeyLabelsState.Elements()) == 0 {
		return map[string]string{}
	}
	yandexKMSSymmetricKeyLabelsRes := make(map[string]string)
	yandexKMSSymmetricKeyLabelsType := make(map[string]types.String)
	diags.Append(yandexKMSSymmetricKeyLabelsState.ElementsAs(ctx, &yandexKMSSymmetricKeyLabelsType, false)...)
	if diags.HasError() {
		return nil
	}
	for k, elem := range yandexKMSSymmetricKeyLabelsType {
		yandexKMSSymmetricKeyLabelsRes[k] = elem.ValueString()
	}
	return yandexKMSSymmetricKeyLabelsRes
}
