// Code generated by tfgen. DO NOT EDIT.

package yandex_iam_service_account

import (
	"context"
	"time"

	"github.com/hashicorp/terraform-plugin-framework-timeouts/resource/timeouts"
	"github.com/hashicorp/terraform-plugin-framework/attr"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"
	iam "github.com/yandex-cloud/go-genproto/yandex/cloud/iam/v1"
	"github.com/yandex-cloud/terraform-provider-yandex/pkg/converter"
)

type yandexIAMServiceAccountModel struct {
	CreatedAt        types.String   `tfsdk:"created_at"`
	Description      types.String   `tfsdk:"description"`
	FolderId         types.String   `tfsdk:"folder_id"`
	Name             types.String   `tfsdk:"name"`
	ServiceAccountId types.String   `tfsdk:"service_account_id"`
	ID               types.String   `tfsdk:"id"`
	Timeouts         timeouts.Value `tfsdk:"timeouts"`
}

func (m *yandexIAMServiceAccountModel) GetCreatedAt() types.String {
	return m.CreatedAt
}
func (m *yandexIAMServiceAccountModel) GetDescription() types.String {
	return m.Description
}
func (m *yandexIAMServiceAccountModel) GetFolderId() types.String {
	return m.FolderId
}
func (m *yandexIAMServiceAccountModel) GetName() types.String {
	return m.Name
}
func (m *yandexIAMServiceAccountModel) GetServiceAccountId() types.String {
	return m.ServiceAccountId
}
func (m *yandexIAMServiceAccountModel) GetID() types.String {
	return m.ID
}

func NewYandexIAMServiceAccountModel() yandexIAMServiceAccountModel {
	return yandexIAMServiceAccountModel{
		CreatedAt:        types.StringNull(),
		Description:      types.StringNull(),
		FolderId:         types.StringNull(),
		Name:             types.StringNull(),
		ServiceAccountId: types.StringNull(),
		ID:               types.StringNull(),
	}
}

func yandexIAMServiceAccountModelFillUnknown(target yandexIAMServiceAccountModel) yandexIAMServiceAccountModel {
	if target.CreatedAt.IsUnknown() || target.CreatedAt.IsNull() {
		target.CreatedAt = types.StringNull()
	}
	if target.Description.IsUnknown() || target.Description.IsNull() {
		target.Description = types.StringNull()
	}
	if target.FolderId.IsUnknown() || target.FolderId.IsNull() {
		target.FolderId = types.StringNull()
	}
	if target.Name.IsUnknown() || target.Name.IsNull() {
		target.Name = types.StringNull()
	}
	if target.ServiceAccountId.IsUnknown() || target.ServiceAccountId.IsNull() {
		target.ServiceAccountId = types.StringNull()
	}
	if target.ID.IsUnknown() || target.ID.IsNull() {
		target.ID = types.StringNull()
	}
	return target
}

var yandexIAMServiceAccountModelType = types.ObjectType{
	AttrTypes: map[string]attr.Type{
		"created_at":         types.StringType,
		"description":        types.StringType,
		"folder_id":          types.StringType,
		"name":               types.StringType,
		"service_account_id": types.StringType,
		"id":                 types.StringType,
		"timeouts":           timeouts.BlockAll(context.Background()).Type(),
	},
}

func flattenYandexIAMServiceAccount(ctx context.Context,
	yandexIAMServiceAccount *iam.ServiceAccount,
	state yandexIAMServiceAccountModel,
	to timeouts.Value,
	diags *diag.Diagnostics) types.Object {
	if yandexIAMServiceAccount == nil {
		return types.ObjectNull(yandexIAMServiceAccountModelType.AttrTypes)
	}
	value, diag := types.ObjectValueFrom(ctx, yandexIAMServiceAccountModelType.AttrTypes, yandexIAMServiceAccountModel{
		CreatedAt:        types.StringValue(yandexIAMServiceAccount.GetCreatedAt().AsTime().Format(time.RFC3339)),
		Description:      types.StringValue(yandexIAMServiceAccount.GetDescription()),
		FolderId:         types.StringValue(yandexIAMServiceAccount.GetFolderId()),
		Name:             types.StringValue(yandexIAMServiceAccount.GetName()),
		ServiceAccountId: types.StringValue(yandexIAMServiceAccount.GetId()),
		ID:               types.StringValue(yandexIAMServiceAccount.GetId()),
		Timeouts:         to,
	})
	diags.Append(diag...)
	return value
}

func expandYandexIAMServiceAccount(ctx context.Context, yandexIAMServiceAccountState types.Object, diags *diag.Diagnostics) *iam.ServiceAccount {
	if yandexIAMServiceAccountState.IsNull() || yandexIAMServiceAccountState.IsUnknown() {
		return nil
	}
	var yandexIAMServiceAccount yandexIAMServiceAccountModel
	diags.Append(yandexIAMServiceAccountState.As(ctx, &yandexIAMServiceAccount, basetypes.ObjectAsOptions{UnhandledNullAsEmpty: true, UnhandledUnknownAsEmpty: true})...)
	if diags.HasError() {
		return nil
	}
	return expandYandexIAMServiceAccountModel(ctx, yandexIAMServiceAccount, diags)
}

func expandYandexIAMServiceAccountModel(ctx context.Context, yandexIAMServiceAccountState yandexIAMServiceAccountModel, diags *diag.Diagnostics) *iam.ServiceAccount {
	value := &iam.ServiceAccount{}
	value.SetCreatedAt(converter.ParseTimestamp(yandexIAMServiceAccountState.CreatedAt.ValueString(), diags))
	value.SetDescription(yandexIAMServiceAccountState.Description.ValueString())
	value.SetFolderId(yandexIAMServiceAccountState.FolderId.ValueString())
	value.SetName(yandexIAMServiceAccountState.Name.ValueString())
	value.SetId(yandexIAMServiceAccountState.ServiceAccountId.ValueString())
	value.SetId(yandexIAMServiceAccountState.ServiceAccountId.ValueString())
	if diags.HasError() {
		return nil
	}
	return value
}
