// Code generated by tfgen. DO NOT EDIT.

package yandex_organizationmanager_user_ssh_key

import (
	"context"
	"time"

	"github.com/hashicorp/terraform-plugin-framework-timeouts/resource/timeouts"
	"github.com/hashicorp/terraform-plugin-framework/attr"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
	organizationmanager "github.com/yandex-cloud/go-genproto/yandex/cloud/organizationmanager/v1"
)

type yandexOrganizationmanagerUserSshKeyDatasourceModel struct {
	CreatedAt      types.String   `tfsdk:"created_at"`
	Data           types.String   `tfsdk:"data"`
	ExpiresAt      types.String   `tfsdk:"expires_at"`
	Fingerprint    types.String   `tfsdk:"fingerprint"`
	Name           types.String   `tfsdk:"name"`
	OrganizationId types.String   `tfsdk:"organization_id"`
	SubjectId      types.String   `tfsdk:"subject_id"`
	UserSshKeyId   types.String   `tfsdk:"user_ssh_key_id"`
	ID             types.String   `tfsdk:"id"`
	Timeouts       timeouts.Value `tfsdk:"timeouts"`
}

func (m *yandexOrganizationmanagerUserSshKeyDatasourceModel) GetCreatedAt() types.String {
	return m.CreatedAt
}
func (m *yandexOrganizationmanagerUserSshKeyDatasourceModel) GetData() types.String {
	return m.Data
}
func (m *yandexOrganizationmanagerUserSshKeyDatasourceModel) GetExpiresAt() types.String {
	return m.ExpiresAt
}
func (m *yandexOrganizationmanagerUserSshKeyDatasourceModel) GetFingerprint() types.String {
	return m.Fingerprint
}
func (m *yandexOrganizationmanagerUserSshKeyDatasourceModel) GetName() types.String {
	return m.Name
}
func (m *yandexOrganizationmanagerUserSshKeyDatasourceModel) GetOrganizationId() types.String {
	return m.OrganizationId
}
func (m *yandexOrganizationmanagerUserSshKeyDatasourceModel) GetSubjectId() types.String {
	return m.SubjectId
}
func (m *yandexOrganizationmanagerUserSshKeyDatasourceModel) GetUserSshKeyId() types.String {
	return m.UserSshKeyId
}
func (m *yandexOrganizationmanagerUserSshKeyDatasourceModel) GetID() types.String {
	return m.ID
}

func NewYandexOrganizationmanagerUserSshKeyDatasourceModel() yandexOrganizationmanagerUserSshKeyDatasourceModel {
	return yandexOrganizationmanagerUserSshKeyDatasourceModel{
		CreatedAt:      types.StringNull(),
		Data:           types.StringNull(),
		ExpiresAt:      types.StringNull(),
		Fingerprint:    types.StringNull(),
		Name:           types.StringNull(),
		OrganizationId: types.StringNull(),
		SubjectId:      types.StringNull(),
		UserSshKeyId:   types.StringNull(),
		ID:             types.StringNull(),
	}
}

func yandexOrganizationmanagerUserSshKeyDatasourceModelFillUnknown(target yandexOrganizationmanagerUserSshKeyDatasourceModel) yandexOrganizationmanagerUserSshKeyDatasourceModel {
	if target.CreatedAt.IsUnknown() || target.CreatedAt.IsNull() {
		target.CreatedAt = types.StringNull()
	}
	if target.Data.IsUnknown() || target.Data.IsNull() {
		target.Data = types.StringNull()
	}
	if target.ExpiresAt.IsUnknown() || target.ExpiresAt.IsNull() {
		target.ExpiresAt = types.StringNull()
	}
	if target.Fingerprint.IsUnknown() || target.Fingerprint.IsNull() {
		target.Fingerprint = types.StringNull()
	}
	if target.Name.IsUnknown() || target.Name.IsNull() {
		target.Name = types.StringNull()
	}
	if target.OrganizationId.IsUnknown() || target.OrganizationId.IsNull() {
		target.OrganizationId = types.StringNull()
	}
	if target.SubjectId.IsUnknown() || target.SubjectId.IsNull() {
		target.SubjectId = types.StringNull()
	}
	if target.UserSshKeyId.IsUnknown() || target.UserSshKeyId.IsNull() {
		target.UserSshKeyId = types.StringNull()
	}
	if target.ID.IsUnknown() || target.ID.IsNull() {
		target.ID = types.StringNull()
	}
	return target
}

var yandexOrganizationmanagerUserSshKeyDatasourceModelType = types.ObjectType{
	AttrTypes: map[string]attr.Type{
		"created_at":      types.StringType,
		"data":            types.StringType,
		"expires_at":      types.StringType,
		"fingerprint":     types.StringType,
		"name":            types.StringType,
		"organization_id": types.StringType,
		"subject_id":      types.StringType,
		"user_ssh_key_id": types.StringType,
		"id":              types.StringType,
		"timeouts":        timeouts.BlockAll(context.Background()).Type(),
	},
}

func flattenYandexOrganizationmanagerUserSshKeyDatasource(ctx context.Context,
	yandexOrganizationmanagerUserSshKeyDatasource *organizationmanager.UserSshKey,
	state yandexOrganizationmanagerUserSshKeyDatasourceModel,
	to timeouts.Value,
	diags *diag.Diagnostics) types.Object {
	if yandexOrganizationmanagerUserSshKeyDatasource == nil {
		return types.ObjectNull(yandexOrganizationmanagerUserSshKeyDatasourceModelType.AttrTypes)
	}
	value, diag := types.ObjectValueFrom(ctx, yandexOrganizationmanagerUserSshKeyDatasourceModelType.AttrTypes, yandexOrganizationmanagerUserSshKeyDatasourceModel{
		CreatedAt:      types.StringValue(yandexOrganizationmanagerUserSshKeyDatasource.GetCreatedAt().AsTime().Format(time.RFC3339)),
		Data:           types.StringValue(yandexOrganizationmanagerUserSshKeyDatasource.GetData()),
		ExpiresAt:      types.StringValue(yandexOrganizationmanagerUserSshKeyDatasource.GetExpiresAt().AsTime().Format(time.RFC3339)),
		Fingerprint:    types.StringValue(yandexOrganizationmanagerUserSshKeyDatasource.GetFingerprint()),
		Name:           types.StringValue(yandexOrganizationmanagerUserSshKeyDatasource.GetName()),
		OrganizationId: types.StringValue(yandexOrganizationmanagerUserSshKeyDatasource.GetOrganizationId()),
		SubjectId:      types.StringValue(yandexOrganizationmanagerUserSshKeyDatasource.GetSubjectId()),
		UserSshKeyId:   types.StringValue(yandexOrganizationmanagerUserSshKeyDatasource.GetId()),
		ID:             types.StringValue(yandexOrganizationmanagerUserSshKeyDatasource.GetId()),
		Timeouts:       to,
	})
	diags.Append(diag...)
	return value
}
