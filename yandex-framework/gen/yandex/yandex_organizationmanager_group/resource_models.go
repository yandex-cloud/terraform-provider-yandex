// Code generated by tfgen. DO NOT EDIT.

package yandex_organizationmanager_group

import (
	"context"
	"time"

	"github.com/hashicorp/terraform-plugin-framework-timeouts/resource/timeouts"
	"github.com/hashicorp/terraform-plugin-framework/attr"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"
	organizationmanager "github.com/yandex-cloud/go-genproto/yandex/cloud/organizationmanager/v1"
	"github.com/yandex-cloud/terraform-provider-yandex/pkg/converter"
)

type yandexOrganizationmanagerGroupModel struct {
	CreatedAt      types.String   `tfsdk:"created_at"`
	Description    types.String   `tfsdk:"description"`
	GroupId        types.String   `tfsdk:"group_id"`
	ID             types.String   `tfsdk:"id"`
	Name           types.String   `tfsdk:"name"`
	OrganizationId types.String   `tfsdk:"organization_id"`
	Timeouts       timeouts.Value `tfsdk:"timeouts"`
}

func (m *yandexOrganizationmanagerGroupModel) GetCreatedAt() types.String {
	return m.CreatedAt
}
func (m *yandexOrganizationmanagerGroupModel) GetDescription() types.String {
	return m.Description
}
func (m *yandexOrganizationmanagerGroupModel) GetGroupId() types.String {
	return m.GroupId
}
func (m *yandexOrganizationmanagerGroupModel) GetID() types.String {
	return m.ID
}
func (m *yandexOrganizationmanagerGroupModel) GetName() types.String {
	return m.Name
}
func (m *yandexOrganizationmanagerGroupModel) GetOrganizationId() types.String {
	return m.OrganizationId
}

func NewYandexOrganizationmanagerGroupModel() yandexOrganizationmanagerGroupModel {
	return yandexOrganizationmanagerGroupModel{
		CreatedAt:      types.StringNull(),
		Description:    types.StringNull(),
		GroupId:        types.StringNull(),
		ID:             types.StringNull(),
		Name:           types.StringNull(),
		OrganizationId: types.StringNull(),
	}
}

func yandexOrganizationmanagerGroupModelFillUnknown(target yandexOrganizationmanagerGroupModel) yandexOrganizationmanagerGroupModel {
	if target.CreatedAt.IsUnknown() || target.CreatedAt.IsNull() {
		target.CreatedAt = types.StringNull()
	}
	if target.Description.IsUnknown() || target.Description.IsNull() {
		target.Description = types.StringNull()
	}
	if target.GroupId.IsUnknown() || target.GroupId.IsNull() {
		target.GroupId = types.StringNull()
	}
	if target.ID.IsUnknown() || target.ID.IsNull() {
		target.ID = types.StringNull()
	}
	if target.Name.IsUnknown() || target.Name.IsNull() {
		target.Name = types.StringNull()
	}
	if target.OrganizationId.IsUnknown() || target.OrganizationId.IsNull() {
		target.OrganizationId = types.StringNull()
	}
	return target
}

var yandexOrganizationmanagerGroupModelType = types.ObjectType{
	AttrTypes: map[string]attr.Type{
		"created_at":      types.StringType,
		"description":     types.StringType,
		"group_id":        types.StringType,
		"id":              types.StringType,
		"name":            types.StringType,
		"organization_id": types.StringType,
		"timeouts":        timeouts.BlockAll(context.Background()).Type(),
	},
}

func flattenYandexOrganizationmanagerGroup(ctx context.Context,
	yandexOrganizationmanagerGroup *organizationmanager.Group,
	state yandexOrganizationmanagerGroupModel,
	to timeouts.Value,
	diags *diag.Diagnostics) types.Object {
	if yandexOrganizationmanagerGroup == nil {
		return types.ObjectNull(yandexOrganizationmanagerGroupModelType.AttrTypes)
	}
	value, diag := types.ObjectValueFrom(ctx, yandexOrganizationmanagerGroupModelType.AttrTypes, yandexOrganizationmanagerGroupModel{
		CreatedAt:      types.StringValue(yandexOrganizationmanagerGroup.GetCreatedAt().AsTime().Format(time.RFC3339)),
		Description:    types.StringValue(yandexOrganizationmanagerGroup.GetDescription()),
		GroupId:        types.StringValue(yandexOrganizationmanagerGroup.GetId()),
		ID:             types.StringValue(yandexOrganizationmanagerGroup.GetId()),
		Name:           types.StringValue(yandexOrganizationmanagerGroup.GetName()),
		OrganizationId: types.StringValue(yandexOrganizationmanagerGroup.GetOrganizationId()),
		Timeouts:       to,
	})
	diags.Append(diag...)
	return value
}

func expandYandexOrganizationmanagerGroup(ctx context.Context, yandexOrganizationmanagerGroupState types.Object, diags *diag.Diagnostics) *organizationmanager.Group {
	if yandexOrganizationmanagerGroupState.IsNull() || yandexOrganizationmanagerGroupState.IsUnknown() {
		return nil
	}
	var yandexOrganizationmanagerGroup yandexOrganizationmanagerGroupModel
	diags.Append(yandexOrganizationmanagerGroupState.As(ctx, &yandexOrganizationmanagerGroup, basetypes.ObjectAsOptions{UnhandledNullAsEmpty: true, UnhandledUnknownAsEmpty: true})...)
	if diags.HasError() {
		return nil
	}
	return expandYandexOrganizationmanagerGroupModel(ctx, yandexOrganizationmanagerGroup, diags)
}

func expandYandexOrganizationmanagerGroupModel(ctx context.Context, yandexOrganizationmanagerGroupState yandexOrganizationmanagerGroupModel, diags *diag.Diagnostics) *organizationmanager.Group {
	value := &organizationmanager.Group{}
	value.SetCreatedAt(converter.ParseTimestamp(yandexOrganizationmanagerGroupState.CreatedAt.ValueString(), diags))
	value.SetDescription(yandexOrganizationmanagerGroupState.Description.ValueString())
	value.SetId(yandexOrganizationmanagerGroupState.GroupId.ValueString())
	value.SetId(yandexOrganizationmanagerGroupState.GroupId.ValueString())
	value.SetName(yandexOrganizationmanagerGroupState.Name.ValueString())
	value.SetOrganizationId(yandexOrganizationmanagerGroupState.OrganizationId.ValueString())
	if diags.HasError() {
		return nil
	}
	return value
}
