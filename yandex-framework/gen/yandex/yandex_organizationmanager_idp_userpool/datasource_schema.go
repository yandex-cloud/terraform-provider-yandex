// Code generated by tfgen. DO NOT EDIT.

package yandex_organizationmanager_idp_userpool

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework-timeouts/resource/timeouts"
	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func YandexOrganizationmanagerIdpUserpoolDatasourceSchema(ctx context.Context) schema.Schema {
	return schema.Schema{
		Description:         "A userpool is a container for users in the Identity Provider system.",
		MarkdownDescription: "A userpool is a container for users in the Identity Provider system.",
		Attributes: map[string]schema.Attribute{

			"bruteforce_protection_policy": schema.SingleNestedAttribute{

				Attributes: map[string]schema.Attribute{

					"attempts": schema.Int64Attribute{
						MarkdownDescription: "Number of failed attempts allowed within the window before blocking.",
						Description: "Number of failed attempts allowed within the window before blocking." +
							// proto paths: +
							// -> yandex.cloud.organizationmanager.v1.idp.Userpool.bruteforce_protection_policyyandex.cloud.organizationmanager.v1.idp.BruteforceProtectionPolicy.attempts
							"package: yandex.cloud.organizationmanager.v1.idp\n" +
							"filename: yandex/cloud/organizationmanager/v1/idp/userpool.proto\n",
						Computed: true,
					},

					"block": schema.StringAttribute{
						MarkdownDescription: "Duration of the block after too many failed attempts.",
						Description: "Duration of the block after too many failed attempts." +
							// proto paths: +
							// -> yandex.cloud.organizationmanager.v1.idp.Userpool.bruteforce_protection_policyyandex.cloud.organizationmanager.v1.idp.BruteforceProtectionPolicy.block
							"package: yandex.cloud.organizationmanager.v1.idp\n" +
							"filename: yandex/cloud/organizationmanager/v1/idp/userpool.proto\n",
						Computed: true,
					},

					"window": schema.StringAttribute{
						MarkdownDescription: "Time window for counting failed authentication attempts.",
						Description: "Time window for counting failed authentication attempts." +
							// proto paths: +
							// -> yandex.cloud.organizationmanager.v1.idp.Userpool.bruteforce_protection_policyyandex.cloud.organizationmanager.v1.idp.BruteforceProtectionPolicy.window
							"package: yandex.cloud.organizationmanager.v1.idp\n" +
							"filename: yandex/cloud/organizationmanager/v1/idp/userpool.proto\n",
						Computed: true,
					},
				},
				MarkdownDescription: "Bruteforce protection policy for this userpool.",
				Description: "Bruteforce protection policy for this userpool." +
					// proto paths: +
					// -> yandex.cloud.organizationmanager.v1.idp.Userpool.bruteforce_protection_policy
					"package: yandex.cloud.organizationmanager.v1.idp\n" +
					"filename: yandex/cloud/organizationmanager/v1/idp/userpool.proto\n",
				Computed: true,
			},

			"created_at": schema.StringAttribute{
				MarkdownDescription: "Timestamp when the userpool was created.",
				Description: "Timestamp when the userpool was created." +
					// proto paths: +
					// -> yandex.cloud.organizationmanager.v1.idp.Userpool.created_at
					"package: yandex.cloud.organizationmanager.v1.idp\n" +
					"filename: yandex/cloud/organizationmanager/v1/idp/userpool.proto\n",
				Computed: true,
			},

			"description": schema.StringAttribute{
				MarkdownDescription: "Description of the userpool.",
				Description: "Description of the userpool." +
					// proto paths: +
					// -> yandex.cloud.organizationmanager.v1.idp.Userpool.description
					"package: yandex.cloud.organizationmanager.v1.idp\n" +
					"filename: yandex/cloud/organizationmanager/v1/idp/userpool.proto\n",
				Computed: true,
			},

			"domains": schema.ListAttribute{
				ElementType:         types.StringType,
				MarkdownDescription: "List of domains associated with this userpool.",
				Description: "List of domains associated with this userpool." +
					// proto paths: +
					// -> yandex.cloud.organizationmanager.v1.idp.Userpool.domains
					"package: yandex.cloud.organizationmanager.v1.idp\n" +
					"filename: yandex/cloud/organizationmanager/v1/idp/userpool.proto\n",
				Computed: true,
			},

			"labels": schema.MapAttribute{
				ElementType:         types.StringType,
				MarkdownDescription: "Resource labels as key:value pairs.",
				Description: "Resource labels as key:value pairs." +
					// proto paths: +
					// -> yandex.cloud.organizationmanager.v1.idp.Userpool.labels
					"package: yandex.cloud.organizationmanager.v1.idp\n" +
					"filename: yandex/cloud/organizationmanager/v1/idp/userpool.proto\n",
				Computed: true,
			},

			"name": schema.StringAttribute{
				MarkdownDescription: "Name of the userpool.",
				Description: "Name of the userpool." +
					// proto paths: +
					// -> yandex.cloud.organizationmanager.v1.idp.Userpool.name
					"package: yandex.cloud.organizationmanager.v1.idp\n" +
					"filename: yandex/cloud/organizationmanager/v1/idp/userpool.proto\n",
				Computed: true,
			},

			"organization_id": schema.StringAttribute{
				MarkdownDescription: "ID of the organization this userpool belongs to.",
				Description: "ID of the organization this userpool belongs to." +
					// proto paths: +
					// -> yandex.cloud.organizationmanager.v1.idp.Userpool.organization_id
					"package: yandex.cloud.organizationmanager.v1.idp\n" +
					"filename: yandex/cloud/organizationmanager/v1/idp/userpool.proto\n",
				Computed: true,
			},

			"password_lifetime_policy": schema.SingleNestedAttribute{

				Attributes: map[string]schema.Attribute{

					"max_days_count": schema.Int64Attribute{
						MarkdownDescription: "Maximum number of days a password remains valid.\n Zero means passwords never expire.",
						Description: "Maximum number of days a password remains valid.\n Zero means passwords never expire." +
							// proto paths: +
							// -> yandex.cloud.organizationmanager.v1.idp.Userpool.password_lifetime_policyyandex.cloud.organizationmanager.v1.idp.PasswordLifetimePolicy.max_days_count
							"package: yandex.cloud.organizationmanager.v1.idp\n" +
							"filename: yandex/cloud/organizationmanager/v1/idp/userpool.proto\n",
						Computed: true,
					},

					"min_days_count": schema.Int64Attribute{
						MarkdownDescription: "Minimum number of days before a password can be changed.",
						Description: "Minimum number of days before a password can be changed." +
							// proto paths: +
							// -> yandex.cloud.organizationmanager.v1.idp.Userpool.password_lifetime_policyyandex.cloud.organizationmanager.v1.idp.PasswordLifetimePolicy.min_days_count
							"package: yandex.cloud.organizationmanager.v1.idp\n" +
							"filename: yandex/cloud/organizationmanager/v1/idp/userpool.proto\n",
						Computed: true,
					},
				},
				MarkdownDescription: "Password lifetime policy for this userpool.",
				Description: "Password lifetime policy for this userpool." +
					// proto paths: +
					// -> yandex.cloud.organizationmanager.v1.idp.Userpool.password_lifetime_policy
					"package: yandex.cloud.organizationmanager.v1.idp\n" +
					"filename: yandex/cloud/organizationmanager/v1/idp/userpool.proto\n",
				Computed: true,
			},

			"password_quality_policy": schema.SingleNestedAttribute{

				Attributes: map[string]schema.Attribute{

					"allow_similar": schema.BoolAttribute{
						MarkdownDescription: "Whether passwords similar to previous ones are allowed.",
						Description: "Whether passwords similar to previous ones are allowed." +
							// proto paths: +
							// -> yandex.cloud.organizationmanager.v1.idp.Userpool.password_quality_policyyandex.cloud.organizationmanager.v1.idp.PasswordQualityPolicy.allow_similar
							"package: yandex.cloud.organizationmanager.v1.idp\n" +
							"filename: yandex/cloud/organizationmanager/v1/idp/userpool.proto\n",
						Computed: true,
					},

					"match_length": schema.Int64Attribute{
						MarkdownDescription: "Minimum length of substrings to check for similarity to vulnerable sequences.",
						Description: "Minimum length of substrings to check for similarity to vulnerable sequences." +
							// proto paths: +
							// -> yandex.cloud.organizationmanager.v1.idp.Userpool.password_quality_policyyandex.cloud.organizationmanager.v1.idp.PasswordQualityPolicy.match_length
							"package: yandex.cloud.organizationmanager.v1.idp\n" +
							"filename: yandex/cloud/organizationmanager/v1/idp/userpool.proto\n",
						Computed: true,
					},

					"max_length": schema.Int64Attribute{
						MarkdownDescription: "Maximum password length. Zero means no maximum length is enforced.",
						Description: "Maximum password length. Zero means no maximum length is enforced." +
							// proto paths: +
							// -> yandex.cloud.organizationmanager.v1.idp.Userpool.password_quality_policyyandex.cloud.organizationmanager.v1.idp.PasswordQualityPolicy.max_length
							"package: yandex.cloud.organizationmanager.v1.idp\n" +
							"filename: yandex/cloud/organizationmanager/v1/idp/userpool.proto\n",
						Computed: true,
					},

					"min_length": schema.Int64Attribute{
						MarkdownDescription: "Minimum password length.",
						Description: "Minimum password length." +
							// proto paths: +
							// -> yandex.cloud.organizationmanager.v1.idp.Userpool.password_quality_policyyandex.cloud.organizationmanager.v1.idp.PasswordQualityPolicy.min_length
							"package: yandex.cloud.organizationmanager.v1.idp\n" +
							"filename: yandex/cloud/organizationmanager/v1/idp/userpool.proto\n",
						Computed: true,
					},

					"min_length_by_class_settings": schema.SingleNestedAttribute{

						Attributes: map[string]schema.Attribute{

							"one": schema.Int64Attribute{
								MarkdownDescription: "Whether users can change their own passwords.",
								Description: "Whether users can change their own passwords." +
									// proto paths: +
									// -> yandex.cloud.organizationmanager.v1.idp.Userpool.password_quality_policyyandex.cloud.organizationmanager.v1.idp.PasswordQualityPolicy.min_length_by_class_settingsyandex.cloud.organizationmanager.v1.idp.PasswordQualityPolicy.MinLengthByClassSettings.one
									"package: yandex.cloud.organizationmanager.v1.idp\n" +
									"filename: yandex/cloud/organizationmanager/v1/idp/userpool.proto\n",
								Computed: true,
							},

							"three": schema.Int64Attribute{
								MarkdownDescription: "Whether users can edit their own contact information.",
								Description: "Whether users can edit their own contact information." +
									// proto paths: +
									// -> yandex.cloud.organizationmanager.v1.idp.Userpool.password_quality_policyyandex.cloud.organizationmanager.v1.idp.PasswordQualityPolicy.min_length_by_class_settingsyandex.cloud.organizationmanager.v1.idp.PasswordQualityPolicy.MinLengthByClassSettings.three
									"package: yandex.cloud.organizationmanager.v1.idp\n" +
									"filename: yandex/cloud/organizationmanager/v1/idp/userpool.proto\n",
								Computed: true,
							},

							"two": schema.Int64Attribute{
								MarkdownDescription: "Whether users can edit their own profile information.",
								Description: "Whether users can edit their own profile information." +
									// proto paths: +
									// -> yandex.cloud.organizationmanager.v1.idp.Userpool.password_quality_policyyandex.cloud.organizationmanager.v1.idp.PasswordQualityPolicy.min_length_by_class_settingsyandex.cloud.organizationmanager.v1.idp.PasswordQualityPolicy.MinLengthByClassSettings.two
									"package: yandex.cloud.organizationmanager.v1.idp\n" +
									"filename: yandex/cloud/organizationmanager/v1/idp/userpool.proto\n",
								Computed: true,
							},
						},
						MarkdownDescription: "Minimum length requirements based on character class diversity.\n If not specified, these checks are disabled.",
						Description: "Minimum length requirements based on character class diversity.\n If not specified, these checks are disabled." +
							// proto paths: +
							// -> yandex.cloud.organizationmanager.v1.idp.Userpool.password_quality_policyyandex.cloud.organizationmanager.v1.idp.PasswordQualityPolicy.min_length_by_class_settings
							"package: yandex.cloud.organizationmanager.v1.idp\n" +
							"filename: yandex/cloud/organizationmanager/v1/idp/userpool.proto\n",
						Computed: true,
					},

					"required_classes": schema.SingleNestedAttribute{

						Attributes: map[string]schema.Attribute{

							"digits": schema.BoolAttribute{
								MarkdownDescription: "Name of the userpool.",
								Description: "Name of the userpool." +
									// proto paths: +
									// -> yandex.cloud.organizationmanager.v1.idp.Userpool.password_quality_policyyandex.cloud.organizationmanager.v1.idp.PasswordQualityPolicy.required_classesyandex.cloud.organizationmanager.v1.idp.PasswordQualityPolicy.RequiredClasses.digits
									"package: yandex.cloud.organizationmanager.v1.idp\n" +
									"filename: yandex/cloud/organizationmanager/v1/idp/userpool.proto\n",
								Computed: true,
							},

							"lowers": schema.BoolAttribute{
								MarkdownDescription: "Unique identifier of the userpool.",
								Description: "Unique identifier of the userpool." +
									// proto paths: +
									// -> yandex.cloud.organizationmanager.v1.idp.Userpool.password_quality_policyyandex.cloud.organizationmanager.v1.idp.PasswordQualityPolicy.required_classesyandex.cloud.organizationmanager.v1.idp.PasswordQualityPolicy.RequiredClasses.lowers
									"package: yandex.cloud.organizationmanager.v1.idp\n" +
									"filename: yandex/cloud/organizationmanager/v1/idp/userpool.proto\n",
								Computed: true,
							},

							"specials": schema.BoolAttribute{
								MarkdownDescription: "Description of the userpool.",
								Description: "Description of the userpool." +
									// proto paths: +
									// -> yandex.cloud.organizationmanager.v1.idp.Userpool.password_quality_policyyandex.cloud.organizationmanager.v1.idp.PasswordQualityPolicy.required_classesyandex.cloud.organizationmanager.v1.idp.PasswordQualityPolicy.RequiredClasses.specials
									"package: yandex.cloud.organizationmanager.v1.idp\n" +
									"filename: yandex/cloud/organizationmanager/v1/idp/userpool.proto\n",
								Computed: true,
							},

							"uppers": schema.BoolAttribute{
								MarkdownDescription: "ID of the organization this userpool belongs to.",
								Description: "ID of the organization this userpool belongs to." +
									// proto paths: +
									// -> yandex.cloud.organizationmanager.v1.idp.Userpool.password_quality_policyyandex.cloud.organizationmanager.v1.idp.PasswordQualityPolicy.required_classesyandex.cloud.organizationmanager.v1.idp.PasswordQualityPolicy.RequiredClasses.uppers
									"package: yandex.cloud.organizationmanager.v1.idp\n" +
									"filename: yandex/cloud/organizationmanager/v1/idp/userpool.proto\n",
								Computed: true,
							},
						},
						MarkdownDescription: "Character classes required in passwords.",
						Description: "Character classes required in passwords." +
							// proto paths: +
							// -> yandex.cloud.organizationmanager.v1.idp.Userpool.password_quality_policyyandex.cloud.organizationmanager.v1.idp.PasswordQualityPolicy.required_classes
							"package: yandex.cloud.organizationmanager.v1.idp\n" +
							"filename: yandex/cloud/organizationmanager/v1/idp/userpool.proto\n",
						Computed: true,
					},
				},
				MarkdownDescription: "Password quality policy for this userpool.",
				Description: "Password quality policy for this userpool." +
					// proto paths: +
					// -> yandex.cloud.organizationmanager.v1.idp.Userpool.password_quality_policy
					"package: yandex.cloud.organizationmanager.v1.idp\n" +
					"filename: yandex/cloud/organizationmanager/v1/idp/userpool.proto\n",
				Computed: true,
			},

			"status": schema.StringAttribute{
				MarkdownDescription: "Current status of the userpool.",
				Description: "Current status of the userpool." +
					// proto paths: +
					// -> yandex.cloud.organizationmanager.v1.idp.Userpool.status
					"package: yandex.cloud.organizationmanager.v1.idp\n" +
					"filename: yandex/cloud/organizationmanager/v1/idp/userpool.proto\n",
				Computed: true,
			},

			"updated_at": schema.StringAttribute{
				MarkdownDescription: "Timestamp when the userpool was last updated.",
				Description: "Timestamp when the userpool was last updated." +
					// proto paths: +
					// -> yandex.cloud.organizationmanager.v1.idp.Userpool.updated_at
					"package: yandex.cloud.organizationmanager.v1.idp\n" +
					"filename: yandex/cloud/organizationmanager/v1/idp/userpool.proto\n",
				Computed: true,
			},

			"user_settings": schema.SingleNestedAttribute{

				Attributes: map[string]schema.Attribute{

					"allow_edit_self_contacts": schema.BoolAttribute{
						MarkdownDescription: "Whether users can edit their own contact information.",
						Description: "Whether users can edit their own contact information." +
							// proto paths: +
							// -> yandex.cloud.organizationmanager.v1.idp.Userpool.user_settingsyandex.cloud.organizationmanager.v1.idp.UserSettings.allow_edit_self_contacts
							"package: yandex.cloud.organizationmanager.v1.idp\n" +
							"filename: yandex/cloud/organizationmanager/v1/idp/userpool.proto\n",
						Computed: true,
					},

					"allow_edit_self_info": schema.BoolAttribute{
						MarkdownDescription: "Whether users can edit their own profile information.",
						Description: "Whether users can edit their own profile information." +
							// proto paths: +
							// -> yandex.cloud.organizationmanager.v1.idp.Userpool.user_settingsyandex.cloud.organizationmanager.v1.idp.UserSettings.allow_edit_self_info
							"package: yandex.cloud.organizationmanager.v1.idp\n" +
							"filename: yandex/cloud/organizationmanager/v1/idp/userpool.proto\n",
						Computed: true,
					},

					"allow_edit_self_login": schema.BoolAttribute{
						MarkdownDescription: "Whether users can edit their own login information.",
						Description: "Whether users can edit their own login information." +
							// proto paths: +
							// -> yandex.cloud.organizationmanager.v1.idp.Userpool.user_settingsyandex.cloud.organizationmanager.v1.idp.UserSettings.allow_edit_self_login
							"package: yandex.cloud.organizationmanager.v1.idp\n" +
							"filename: yandex/cloud/organizationmanager/v1/idp/userpool.proto\n",
						Computed: true,
					},

					"allow_edit_self_password": schema.BoolAttribute{
						MarkdownDescription: "Whether users can change their own passwords.",
						Description: "Whether users can change their own passwords." +
							// proto paths: +
							// -> yandex.cloud.organizationmanager.v1.idp.Userpool.user_settingsyandex.cloud.organizationmanager.v1.idp.UserSettings.allow_edit_self_password
							"package: yandex.cloud.organizationmanager.v1.idp\n" +
							"filename: yandex/cloud/organizationmanager/v1/idp/userpool.proto\n",
						Computed: true,
					},
				},
				MarkdownDescription: "User settings for this userpool.",
				Description: "User settings for this userpool." +
					// proto paths: +
					// -> yandex.cloud.organizationmanager.v1.idp.Userpool.user_settings
					"package: yandex.cloud.organizationmanager.v1.idp\n" +
					"filename: yandex/cloud/organizationmanager/v1/idp/userpool.proto\n",
				Computed: true,
			},

			"userpool_id": schema.StringAttribute{
				MarkdownDescription: "ID of the userpool to return.\n To get the userpool ID, make a [UserpoolService.List] request.",
				Description: "ID of the userpool to return.\n To get the userpool ID, make a [UserpoolService.List] request." +
					// proto paths: +
					// -> yandex.cloud.organizationmanager.v1.idp.GetUserpoolRequest.userpool_id
					// -> yandex.cloud.organizationmanager.v1.idp.Userpool.id
					"package: yandex.cloud.organizationmanager.v1.idp\n" +
					"filename: yandex/cloud/organizationmanager/v1/idp/userpool_service.proto\n",
				Optional: true,
				Computed: true,

				Validators: []validator.String{
					stringvalidator.LengthBetween(0, 50),
				},
			},

			"id": schema.StringAttribute{
				MarkdownDescription: "ID of the userpool to return.\n To get the userpool ID, make a [UserpoolService.List] request.",
				Description: "ID of the userpool to return.\n To get the userpool ID, make a [UserpoolService.List] request." +
					// proto paths: +
					// -> yandex.cloud.organizationmanager.v1.idp.GetUserpoolRequest.userpool_id
					// -> yandex.cloud.organizationmanager.v1.idp.Userpool.id
					"package: yandex.cloud.organizationmanager.v1.idp\n" +
					"filename: yandex/cloud/organizationmanager/v1/idp/userpool_service.proto\n",
				Optional: true,
				Computed: true,

				Validators: []validator.String{
					stringvalidator.LengthBetween(0, 50),
				},
			},
			"timeouts": timeouts.AttributesAll(ctx),
		},

		Blocks: map[string]schema.Block{},
	}
}
