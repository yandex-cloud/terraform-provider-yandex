// Code generated by tfgen. DO NOT EDIT.

package yandex_organizationmanager_idp_userpool

import (
	"context"
	"time"

	"github.com/hashicorp/terraform-plugin-framework-timeouts/resource/timeouts"
	"github.com/hashicorp/terraform-plugin-framework/attr"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
	idp "github.com/yandex-cloud/go-genproto/yandex/cloud/organizationmanager/v1/idp"
	"github.com/yandex-cloud/terraform-provider-yandex/pkg/converter"
)

type yandexOrganizationmanagerIdpUserpoolDatasourceModel struct {
	BruteforceProtectionPolicy types.Object   `tfsdk:"bruteforce_protection_policy"`
	CreatedAt                  types.String   `tfsdk:"created_at"`
	Description                types.String   `tfsdk:"description"`
	Domains                    types.List     `tfsdk:"domains"`
	Labels                     types.Map      `tfsdk:"labels"`
	Name                       types.String   `tfsdk:"name"`
	OrganizationId             types.String   `tfsdk:"organization_id"`
	PasswordLifetimePolicy     types.Object   `tfsdk:"password_lifetime_policy"`
	PasswordQualityPolicy      types.Object   `tfsdk:"password_quality_policy"`
	Status                     types.String   `tfsdk:"status"`
	UpdatedAt                  types.String   `tfsdk:"updated_at"`
	UserSettings               types.Object   `tfsdk:"user_settings"`
	UserpoolId                 types.String   `tfsdk:"userpool_id"`
	ID                         types.String   `tfsdk:"id"`
	Timeouts                   timeouts.Value `tfsdk:"timeouts"`
}

func NewYandexOrganizationmanagerIdpUserpoolDatasourceModel() yandexOrganizationmanagerIdpUserpoolDatasourceModel {
	return yandexOrganizationmanagerIdpUserpoolDatasourceModel{
		BruteforceProtectionPolicy: types.ObjectNull(yandexOrganizationmanagerIdpUserpoolBruteforceProtectionPolicyModelType.AttrTypes),
		CreatedAt:                  types.StringNull(),
		Description:                types.StringNull(),
		Domains:                    types.ListNull(types.StringType),
		Labels:                     types.MapNull(types.StringType),
		Name:                       types.StringNull(),
		OrganizationId:             types.StringNull(),
		PasswordLifetimePolicy:     types.ObjectNull(yandexOrganizationmanagerIdpUserpoolPasswordLifetimePolicyModelType.AttrTypes),
		PasswordQualityPolicy:      types.ObjectNull(yandexOrganizationmanagerIdpUserpoolPasswordQualityPolicyModelType.AttrTypes),
		Status:                     types.StringNull(),
		UpdatedAt:                  types.StringNull(),
		UserSettings:               types.ObjectNull(yandexOrganizationmanagerIdpUserpoolUserSettingsModelType.AttrTypes),
		UserpoolId:                 types.StringNull(),
		ID:                         types.StringNull(),
	}
}

func yandexOrganizationmanagerIdpUserpoolDatasourceModelFillUnknown(target yandexOrganizationmanagerIdpUserpoolDatasourceModel) yandexOrganizationmanagerIdpUserpoolDatasourceModel {
	if target.BruteforceProtectionPolicy.IsUnknown() || target.BruteforceProtectionPolicy.IsNull() {
		target.BruteforceProtectionPolicy = types.ObjectNull(yandexOrganizationmanagerIdpUserpoolBruteforceProtectionPolicyModelType.AttrTypes)
	}
	if target.CreatedAt.IsUnknown() || target.CreatedAt.IsNull() {
		target.CreatedAt = types.StringNull()
	}
	if target.Description.IsUnknown() || target.Description.IsNull() {
		target.Description = types.StringNull()
	}
	if target.Domains.IsUnknown() || target.Domains.IsNull() {
		target.Domains = types.ListNull(types.StringType)
	}
	if target.Labels.IsUnknown() || target.Labels.IsNull() {
		target.Labels = types.MapNull(types.StringType)
	}
	if target.Name.IsUnknown() || target.Name.IsNull() {
		target.Name = types.StringNull()
	}
	if target.OrganizationId.IsUnknown() || target.OrganizationId.IsNull() {
		target.OrganizationId = types.StringNull()
	}
	if target.PasswordLifetimePolicy.IsUnknown() || target.PasswordLifetimePolicy.IsNull() {
		target.PasswordLifetimePolicy = types.ObjectNull(yandexOrganizationmanagerIdpUserpoolPasswordLifetimePolicyModelType.AttrTypes)
	}
	if target.PasswordQualityPolicy.IsUnknown() || target.PasswordQualityPolicy.IsNull() {
		target.PasswordQualityPolicy = types.ObjectNull(yandexOrganizationmanagerIdpUserpoolPasswordQualityPolicyModelType.AttrTypes)
	}
	if target.Status.IsUnknown() || target.Status.IsNull() {
		target.Status = types.StringNull()
	}
	if target.UpdatedAt.IsUnknown() || target.UpdatedAt.IsNull() {
		target.UpdatedAt = types.StringNull()
	}
	if target.UserSettings.IsUnknown() || target.UserSettings.IsNull() {
		target.UserSettings = types.ObjectNull(yandexOrganizationmanagerIdpUserpoolUserSettingsModelType.AttrTypes)
	}
	if target.UserpoolId.IsUnknown() || target.UserpoolId.IsNull() {
		target.UserpoolId = types.StringNull()
	}
	if target.ID.IsUnknown() || target.ID.IsNull() {
		target.ID = types.StringNull()
	}
	return target
}

var yandexOrganizationmanagerIdpUserpoolDatasourceModelType = types.ObjectType{
	AttrTypes: map[string]attr.Type{
		"bruteforce_protection_policy": yandexOrganizationmanagerIdpUserpoolBruteforceProtectionPolicyModelType,
		"created_at":                   types.StringType,
		"description":                  types.StringType,
		"domains":                      types.ListType{ElemType: types.StringType},
		"labels":                       types.MapType{ElemType: types.StringType},
		"name":                         types.StringType,
		"organization_id":              types.StringType,
		"password_lifetime_policy":     yandexOrganizationmanagerIdpUserpoolPasswordLifetimePolicyModelType,
		"password_quality_policy":      yandexOrganizationmanagerIdpUserpoolPasswordQualityPolicyModelType,
		"status":                       types.StringType,
		"updated_at":                   types.StringType,
		"user_settings":                yandexOrganizationmanagerIdpUserpoolUserSettingsModelType,
		"userpool_id":                  types.StringType,
		"id":                           types.StringType,
		"timeouts":                     timeouts.AttributesAll(context.Background()).GetType(),
	},
}

func flattenYandexOrganizationmanagerIdpUserpoolDatasource(ctx context.Context,
	yandexOrganizationmanagerIdpUserpoolDatasource *idp.Userpool,
	state yandexOrganizationmanagerIdpUserpoolDatasourceModel,
	to timeouts.Value,
	diags *diag.Diagnostics) types.Object {
	if yandexOrganizationmanagerIdpUserpoolDatasource == nil {
		return types.ObjectNull(yandexOrganizationmanagerIdpUserpoolDatasourceModelType.AttrTypes)
	}
	value, diag := types.ObjectValueFrom(ctx, yandexOrganizationmanagerIdpUserpoolDatasourceModelType.AttrTypes, yandexOrganizationmanagerIdpUserpoolDatasourceModel{
		BruteforceProtectionPolicy: flattenYandexOrganizationmanagerIdpUserpoolBruteforceProtectionPolicy(ctx, yandexOrganizationmanagerIdpUserpoolDatasource.GetBruteforceProtectionPolicy(), converter.ExpandObject(ctx, state.BruteforceProtectionPolicy, yandexOrganizationmanagerIdpUserpoolBruteforceProtectionPolicyModel{}, diags).(yandexOrganizationmanagerIdpUserpoolBruteforceProtectionPolicyModel), diags),
		CreatedAt:                  types.StringValue(yandexOrganizationmanagerIdpUserpoolDatasource.GetCreatedAt().AsTime().Format(time.RFC3339)),
		Description:                types.StringValue(yandexOrganizationmanagerIdpUserpoolDatasource.GetDescription()),
		Domains:                    flattenYandexOrganizationmanagerIdpUserpoolDomains(ctx, yandexOrganizationmanagerIdpUserpoolDatasource.GetDomains(), state.Domains, diags),
		Labels:                     flattenYandexOrganizationmanagerIdpUserpoolLabels(ctx, yandexOrganizationmanagerIdpUserpoolDatasource.GetLabels(), state.Labels, diags),
		Name:                       types.StringValue(yandexOrganizationmanagerIdpUserpoolDatasource.GetName()),
		OrganizationId:             types.StringValue(yandexOrganizationmanagerIdpUserpoolDatasource.GetOrganizationId()),
		PasswordLifetimePolicy:     flattenYandexOrganizationmanagerIdpUserpoolPasswordLifetimePolicy(ctx, yandexOrganizationmanagerIdpUserpoolDatasource.GetPasswordLifetimePolicy(), diags),
		PasswordQualityPolicy:      flattenYandexOrganizationmanagerIdpUserpoolPasswordQualityPolicy(ctx, yandexOrganizationmanagerIdpUserpoolDatasource.GetPasswordQualityPolicy(), diags),
		Status:                     types.StringValue(yandexOrganizationmanagerIdpUserpoolDatasource.GetStatus().String()),
		UpdatedAt:                  types.StringValue(yandexOrganizationmanagerIdpUserpoolDatasource.GetUpdatedAt().AsTime().Format(time.RFC3339)),
		UserSettings:               flattenYandexOrganizationmanagerIdpUserpoolUserSettings(ctx, yandexOrganizationmanagerIdpUserpoolDatasource.GetUserSettings(), diags),
		UserpoolId:                 types.StringValue(yandexOrganizationmanagerIdpUserpoolDatasource.GetId()),
		ID:                         types.StringValue(yandexOrganizationmanagerIdpUserpoolDatasource.GetId()),
		Timeouts:                   to,
	})
	diags.Append(diag...)
	return value
}
