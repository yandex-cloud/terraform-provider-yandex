// Code generated by tfgen. DO NOT EDIT.

package yandex_iam_workload_identity_oidc_federation

import (
	"context"
	"time"

	"github.com/hashicorp/terraform-plugin-framework-timeouts/resource/timeouts"
	"github.com/hashicorp/terraform-plugin-framework/attr"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"
	oidc "github.com/yandex-cloud/go-genproto/yandex/cloud/iam/v1/workload/oidc"
	"github.com/yandex-cloud/terraform-provider-yandex/pkg/converter"
)

type yandexIamWorkloadIdentityOidcFederationModel struct {
	Audiences    types.List     `tfsdk:"audiences"`
	CreatedAt    types.String   `tfsdk:"created_at"`
	Description  types.String   `tfsdk:"description"`
	Disabled     types.Bool     `tfsdk:"disabled"`
	Enabled      types.Bool     `tfsdk:"enabled"`
	FederationId types.String   `tfsdk:"federation_id"`
	ID           types.String   `tfsdk:"id"`
	FolderId     types.String   `tfsdk:"folder_id"`
	Issuer       types.String   `tfsdk:"issuer"`
	JwksUrl      types.String   `tfsdk:"jwks_url"`
	Labels       types.Map      `tfsdk:"labels"`
	Name         types.String   `tfsdk:"name"`
	Timeouts     timeouts.Value `tfsdk:"timeouts"`
}

func (m *yandexIamWorkloadIdentityOidcFederationModel) GetAudiences() types.List {
	return m.Audiences
}
func (m *yandexIamWorkloadIdentityOidcFederationModel) GetCreatedAt() types.String {
	return m.CreatedAt
}
func (m *yandexIamWorkloadIdentityOidcFederationModel) GetDescription() types.String {
	return m.Description
}
func (m *yandexIamWorkloadIdentityOidcFederationModel) GetDisabled() types.Bool {
	return m.Disabled
}
func (m *yandexIamWorkloadIdentityOidcFederationModel) GetEnabled() types.Bool {
	return m.Enabled
}
func (m *yandexIamWorkloadIdentityOidcFederationModel) GetFederationId() types.String {
	return m.FederationId
}
func (m *yandexIamWorkloadIdentityOidcFederationModel) GetID() types.String {
	return m.ID
}
func (m *yandexIamWorkloadIdentityOidcFederationModel) GetFolderId() types.String {
	return m.FolderId
}
func (m *yandexIamWorkloadIdentityOidcFederationModel) GetIssuer() types.String {
	return m.Issuer
}
func (m *yandexIamWorkloadIdentityOidcFederationModel) GetJwksUrl() types.String {
	return m.JwksUrl
}
func (m *yandexIamWorkloadIdentityOidcFederationModel) GetLabels() types.Map {
	return m.Labels
}
func (m *yandexIamWorkloadIdentityOidcFederationModel) GetName() types.String {
	return m.Name
}

func NewYandexIamWorkloadIdentityOidcFederationModel() yandexIamWorkloadIdentityOidcFederationModel {
	return yandexIamWorkloadIdentityOidcFederationModel{
		Audiences:    types.ListNull(types.StringType),
		CreatedAt:    types.StringNull(),
		Description:  types.StringNull(),
		Disabled:     types.BoolNull(),
		Enabled:      types.BoolNull(),
		FederationId: types.StringNull(),
		ID:           types.StringNull(),
		FolderId:     types.StringNull(),
		Issuer:       types.StringNull(),
		JwksUrl:      types.StringNull(),
		Labels:       types.MapNull(types.StringType),
		Name:         types.StringNull(),
	}
}

func yandexIamWorkloadIdentityOidcFederationModelFillUnknown(target yandexIamWorkloadIdentityOidcFederationModel) yandexIamWorkloadIdentityOidcFederationModel {
	if target.Audiences.IsUnknown() || target.Audiences.IsNull() {
		target.Audiences = types.ListNull(types.StringType)
	}
	if target.CreatedAt.IsUnknown() || target.CreatedAt.IsNull() {
		target.CreatedAt = types.StringNull()
	}
	if target.Description.IsUnknown() || target.Description.IsNull() {
		target.Description = types.StringNull()
	}
	if target.Disabled.IsUnknown() || target.Disabled.IsNull() {
		target.Disabled = types.BoolNull()
	}
	if target.Enabled.IsUnknown() || target.Enabled.IsNull() {
		target.Enabled = types.BoolNull()
	}
	if target.FederationId.IsUnknown() || target.FederationId.IsNull() {
		target.FederationId = types.StringNull()
	}
	if target.ID.IsUnknown() || target.ID.IsNull() {
		target.ID = types.StringNull()
	}
	if target.FolderId.IsUnknown() || target.FolderId.IsNull() {
		target.FolderId = types.StringNull()
	}
	if target.Issuer.IsUnknown() || target.Issuer.IsNull() {
		target.Issuer = types.StringNull()
	}
	if target.JwksUrl.IsUnknown() || target.JwksUrl.IsNull() {
		target.JwksUrl = types.StringNull()
	}
	if target.Labels.IsUnknown() || target.Labels.IsNull() {
		target.Labels = types.MapNull(types.StringType)
	}
	if target.Name.IsUnknown() || target.Name.IsNull() {
		target.Name = types.StringNull()
	}
	return target
}

var yandexIamWorkloadIdentityOidcFederationModelType = types.ObjectType{
	AttrTypes: map[string]attr.Type{
		"audiences":     types.ListType{ElemType: types.StringType},
		"created_at":    types.StringType,
		"description":   types.StringType,
		"disabled":      types.BoolType,
		"enabled":       types.BoolType,
		"federation_id": types.StringType,
		"id":            types.StringType,
		"folder_id":     types.StringType,
		"issuer":        types.StringType,
		"jwks_url":      types.StringType,
		"labels":        types.MapType{ElemType: types.StringType},
		"name":          types.StringType,
		"timeouts":      timeouts.BlockAll(context.Background()).Type(),
	},
}

func flattenYandexIamWorkloadIdentityOidcFederation(ctx context.Context,
	yandexIamWorkloadIdentityOidcFederation *oidc.Federation,
	state yandexIamWorkloadIdentityOidcFederationModel,
	to timeouts.Value,
	diags *diag.Diagnostics) types.Object {
	if yandexIamWorkloadIdentityOidcFederation == nil {
		return types.ObjectNull(yandexIamWorkloadIdentityOidcFederationModelType.AttrTypes)
	}
	value, diag := types.ObjectValueFrom(ctx, yandexIamWorkloadIdentityOidcFederationModelType.AttrTypes, yandexIamWorkloadIdentityOidcFederationModel{
		Audiences:    flattenYandexIamWorkloadIdentityOidcFederationAudiences(ctx, yandexIamWorkloadIdentityOidcFederation.GetAudiences(), state.Audiences, diags),
		CreatedAt:    types.StringValue(yandexIamWorkloadIdentityOidcFederation.GetCreatedAt().AsTime().Format(time.RFC3339)),
		Description:  types.StringValue(yandexIamWorkloadIdentityOidcFederation.GetDescription()),
		Disabled:     state.Disabled,
		Enabled:      types.BoolValue(yandexIamWorkloadIdentityOidcFederation.GetEnabled()),
		FederationId: types.StringValue(yandexIamWorkloadIdentityOidcFederation.GetId()),
		ID:           types.StringValue(yandexIamWorkloadIdentityOidcFederation.GetId()),
		FolderId:     types.StringValue(yandexIamWorkloadIdentityOidcFederation.GetFolderId()),
		Issuer:       types.StringValue(yandexIamWorkloadIdentityOidcFederation.GetIssuer()),
		JwksUrl:      types.StringValue(yandexIamWorkloadIdentityOidcFederation.GetJwksUrl()),
		Labels:       flattenYandexIamWorkloadIdentityOidcFederationLabels(ctx, yandexIamWorkloadIdentityOidcFederation.GetLabels(), state.Labels, diags),
		Name:         types.StringValue(yandexIamWorkloadIdentityOidcFederation.GetName()),
		Timeouts:     to,
	})
	diags.Append(diag...)
	return value
}

func expandYandexIamWorkloadIdentityOidcFederation(ctx context.Context, yandexIamWorkloadIdentityOidcFederationState types.Object, diags *diag.Diagnostics) *oidc.Federation {
	if yandexIamWorkloadIdentityOidcFederationState.IsNull() || yandexIamWorkloadIdentityOidcFederationState.IsUnknown() {
		return nil
	}
	var yandexIamWorkloadIdentityOidcFederation yandexIamWorkloadIdentityOidcFederationModel
	diags.Append(yandexIamWorkloadIdentityOidcFederationState.As(ctx, &yandexIamWorkloadIdentityOidcFederation, basetypes.ObjectAsOptions{UnhandledNullAsEmpty: true, UnhandledUnknownAsEmpty: true})...)
	if diags.HasError() {
		return nil
	}
	return expandYandexIamWorkloadIdentityOidcFederationModel(ctx, yandexIamWorkloadIdentityOidcFederation, diags)
}

func expandYandexIamWorkloadIdentityOidcFederationModel(ctx context.Context, yandexIamWorkloadIdentityOidcFederationState yandexIamWorkloadIdentityOidcFederationModel, diags *diag.Diagnostics) *oidc.Federation {
	value := &oidc.Federation{}
	value.SetAudiences(expandYandexIamWorkloadIdentityOidcFederationAudiences(ctx, yandexIamWorkloadIdentityOidcFederationState.Audiences, diags))
	value.SetCreatedAt(converter.ParseTimestamp(yandexIamWorkloadIdentityOidcFederationState.CreatedAt.ValueString(), diags))
	value.SetDescription(yandexIamWorkloadIdentityOidcFederationState.Description.ValueString())
	value.SetEnabled(yandexIamWorkloadIdentityOidcFederationState.Enabled.ValueBool())
	value.SetId(yandexIamWorkloadIdentityOidcFederationState.FederationId.ValueString())
	value.SetId(yandexIamWorkloadIdentityOidcFederationState.FederationId.ValueString())
	value.SetFolderId(yandexIamWorkloadIdentityOidcFederationState.FolderId.ValueString())
	value.SetIssuer(yandexIamWorkloadIdentityOidcFederationState.Issuer.ValueString())
	value.SetJwksUrl(yandexIamWorkloadIdentityOidcFederationState.JwksUrl.ValueString())
	value.SetLabels(expandYandexIamWorkloadIdentityOidcFederationLabels(ctx, yandexIamWorkloadIdentityOidcFederationState.Labels, diags))
	value.SetName(yandexIamWorkloadIdentityOidcFederationState.Name.ValueString())
	if diags.HasError() {
		return nil
	}
	return value
}

func flattenYandexIamWorkloadIdentityOidcFederationAudiences(ctx context.Context, yandexIamWorkloadIdentityOidcFederationAudiences []string, listState types.List, diags *diag.Diagnostics) types.List {
	if yandexIamWorkloadIdentityOidcFederationAudiences == nil {
		if !listState.IsNull() && !listState.IsUnknown() && len(listState.Elements()) == 0 {
			return listState
		}
		return types.ListNull(types.StringType)
	}
	var yandexIamWorkloadIdentityOidcFederationAudiencesValues []attr.Value
	for _, elem := range yandexIamWorkloadIdentityOidcFederationAudiences {
		val := types.StringValue(elem)
		yandexIamWorkloadIdentityOidcFederationAudiencesValues = append(yandexIamWorkloadIdentityOidcFederationAudiencesValues, val)
	}

	value, diag := types.ListValue(types.StringType, yandexIamWorkloadIdentityOidcFederationAudiencesValues)
	diags.Append(diag...)
	return value
}

func expandYandexIamWorkloadIdentityOidcFederationAudiences(ctx context.Context, yandexIamWorkloadIdentityOidcFederationAudiencesState types.List, diags *diag.Diagnostics) []string {
	if yandexIamWorkloadIdentityOidcFederationAudiencesState.IsNull() || yandexIamWorkloadIdentityOidcFederationAudiencesState.IsUnknown() {
		return nil
	}
	if len(yandexIamWorkloadIdentityOidcFederationAudiencesState.Elements()) == 0 {
		return []string{}
	}
	yandexIamWorkloadIdentityOidcFederationAudiencesRes := make([]string, 0, len(yandexIamWorkloadIdentityOidcFederationAudiencesState.Elements()))
	yandexIamWorkloadIdentityOidcFederationAudiencesType := make([]types.String, 0, len(yandexIamWorkloadIdentityOidcFederationAudiencesState.Elements()))
	diags.Append(yandexIamWorkloadIdentityOidcFederationAudiencesState.ElementsAs(ctx, &yandexIamWorkloadIdentityOidcFederationAudiencesType, false)...)
	if diags.HasError() {
		return nil
	}
	for _, elem := range yandexIamWorkloadIdentityOidcFederationAudiencesType {
		yandexIamWorkloadIdentityOidcFederationAudiencesRes = append(yandexIamWorkloadIdentityOidcFederationAudiencesRes, elem.ValueString())
	}
	return yandexIamWorkloadIdentityOidcFederationAudiencesRes
}

func flattenYandexIamWorkloadIdentityOidcFederationLabels(ctx context.Context, yandexIamWorkloadIdentityOidcFederationLabels map[string]string, listState types.Map, diags *diag.Diagnostics) types.Map {
	if yandexIamWorkloadIdentityOidcFederationLabels == nil {
		if !listState.IsNull() && !listState.IsUnknown() && len(listState.Elements()) == 0 {
			return listState
		}
		return types.MapNull(types.StringType)
	}
	yandexIamWorkloadIdentityOidcFederationLabelsValues := make(map[string]attr.Value)
	for k, elem := range yandexIamWorkloadIdentityOidcFederationLabels {
		val := types.StringValue(elem)
		yandexIamWorkloadIdentityOidcFederationLabelsValues[k] = val
	}

	value, diag := types.MapValue(types.StringType, yandexIamWorkloadIdentityOidcFederationLabelsValues)
	diags.Append(diag...)
	return value
}

func expandYandexIamWorkloadIdentityOidcFederationLabels(ctx context.Context, yandexIamWorkloadIdentityOidcFederationLabelsState types.Map, diags *diag.Diagnostics) map[string]string {
	if yandexIamWorkloadIdentityOidcFederationLabelsState.IsNull() || yandexIamWorkloadIdentityOidcFederationLabelsState.IsUnknown() {
		return nil
	}
	if len(yandexIamWorkloadIdentityOidcFederationLabelsState.Elements()) == 0 {
		return map[string]string{}
	}
	yandexIamWorkloadIdentityOidcFederationLabelsRes := make(map[string]string)
	yandexIamWorkloadIdentityOidcFederationLabelsType := make(map[string]types.String)
	diags.Append(yandexIamWorkloadIdentityOidcFederationLabelsState.ElementsAs(ctx, &yandexIamWorkloadIdentityOidcFederationLabelsType, false)...)
	if diags.HasError() {
		return nil
	}
	for k, elem := range yandexIamWorkloadIdentityOidcFederationLabelsType {
		yandexIamWorkloadIdentityOidcFederationLabelsRes[k] = elem.ValueString()
	}
	return yandexIamWorkloadIdentityOidcFederationLabelsRes
}
