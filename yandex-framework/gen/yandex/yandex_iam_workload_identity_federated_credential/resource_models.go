// Code generated by tfgen. DO NOT EDIT.

package yandex_iam_workload_identity_federated_credential

import (
	"context"
	"time"

	"github.com/hashicorp/terraform-plugin-framework-timeouts/resource/timeouts"
	"github.com/hashicorp/terraform-plugin-framework/attr"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"
	workload "github.com/yandex-cloud/go-genproto/yandex/cloud/iam/v1/workload"
	"github.com/yandex-cloud/terraform-provider-yandex/pkg/converter"
)

type yandexIamWorkloadIdentityFederatedCredentialModel struct {
	CreatedAt             types.String   `tfsdk:"created_at"`
	ExternalSubjectId     types.String   `tfsdk:"external_subject_id"`
	FederatedCredentialId types.String   `tfsdk:"federated_credential_id"`
	ID                    types.String   `tfsdk:"id"`
	FederationId          types.String   `tfsdk:"federation_id"`
	ServiceAccountId      types.String   `tfsdk:"service_account_id"`
	Timeouts              timeouts.Value `tfsdk:"timeouts"`
}

func (m *yandexIamWorkloadIdentityFederatedCredentialModel) GetCreatedAt() types.String {
	return m.CreatedAt
}
func (m *yandexIamWorkloadIdentityFederatedCredentialModel) GetExternalSubjectId() types.String {
	return m.ExternalSubjectId
}
func (m *yandexIamWorkloadIdentityFederatedCredentialModel) GetFederatedCredentialId() types.String {
	return m.FederatedCredentialId
}
func (m *yandexIamWorkloadIdentityFederatedCredentialModel) GetID() types.String {
	return m.ID
}
func (m *yandexIamWorkloadIdentityFederatedCredentialModel) GetFederationId() types.String {
	return m.FederationId
}
func (m *yandexIamWorkloadIdentityFederatedCredentialModel) GetServiceAccountId() types.String {
	return m.ServiceAccountId
}

func NewYandexIamWorkloadIdentityFederatedCredentialModel() yandexIamWorkloadIdentityFederatedCredentialModel {
	return yandexIamWorkloadIdentityFederatedCredentialModel{
		CreatedAt:             types.StringNull(),
		ExternalSubjectId:     types.StringNull(),
		FederatedCredentialId: types.StringNull(),
		ID:                    types.StringNull(),
		FederationId:          types.StringNull(),
		ServiceAccountId:      types.StringNull(),
	}
}

func yandexIamWorkloadIdentityFederatedCredentialModelFillUnknown(target yandexIamWorkloadIdentityFederatedCredentialModel) yandexIamWorkloadIdentityFederatedCredentialModel {
	if target.CreatedAt.IsUnknown() || target.CreatedAt.IsNull() {
		target.CreatedAt = types.StringNull()
	}
	if target.ExternalSubjectId.IsUnknown() || target.ExternalSubjectId.IsNull() {
		target.ExternalSubjectId = types.StringNull()
	}
	if target.FederatedCredentialId.IsUnknown() || target.FederatedCredentialId.IsNull() {
		target.FederatedCredentialId = types.StringNull()
	}
	if target.ID.IsUnknown() || target.ID.IsNull() {
		target.ID = types.StringNull()
	}
	if target.FederationId.IsUnknown() || target.FederationId.IsNull() {
		target.FederationId = types.StringNull()
	}
	if target.ServiceAccountId.IsUnknown() || target.ServiceAccountId.IsNull() {
		target.ServiceAccountId = types.StringNull()
	}
	return target
}

var yandexIamWorkloadIdentityFederatedCredentialModelType = types.ObjectType{
	AttrTypes: map[string]attr.Type{
		"created_at":              types.StringType,
		"external_subject_id":     types.StringType,
		"federated_credential_id": types.StringType,
		"id":                      types.StringType,
		"federation_id":           types.StringType,
		"service_account_id":      types.StringType,
		"timeouts":                timeouts.BlockAll(context.Background()).Type(),
	},
}

func flattenYandexIamWorkloadIdentityFederatedCredential(ctx context.Context,
	yandexIamWorkloadIdentityFederatedCredential *workload.FederatedCredential,
	state yandexIamWorkloadIdentityFederatedCredentialModel,
	to timeouts.Value,
	diags *diag.Diagnostics) types.Object {
	if yandexIamWorkloadIdentityFederatedCredential == nil {
		return types.ObjectNull(yandexIamWorkloadIdentityFederatedCredentialModelType.AttrTypes)
	}
	value, diag := types.ObjectValueFrom(ctx, yandexIamWorkloadIdentityFederatedCredentialModelType.AttrTypes, yandexIamWorkloadIdentityFederatedCredentialModel{
		CreatedAt:             types.StringValue(yandexIamWorkloadIdentityFederatedCredential.GetCreatedAt().AsTime().Format(time.RFC3339)),
		ExternalSubjectId:     types.StringValue(yandexIamWorkloadIdentityFederatedCredential.GetExternalSubjectId()),
		FederatedCredentialId: types.StringValue(yandexIamWorkloadIdentityFederatedCredential.GetId()),
		ID:                    types.StringValue(yandexIamWorkloadIdentityFederatedCredential.GetId()),
		FederationId:          types.StringValue(yandexIamWorkloadIdentityFederatedCredential.GetFederationId()),
		ServiceAccountId:      types.StringValue(yandexIamWorkloadIdentityFederatedCredential.GetServiceAccountId()),
		Timeouts:              to,
	})
	diags.Append(diag...)
	return value
}

func expandYandexIamWorkloadIdentityFederatedCredential(ctx context.Context, yandexIamWorkloadIdentityFederatedCredentialState types.Object, diags *diag.Diagnostics) *workload.FederatedCredential {
	if yandexIamWorkloadIdentityFederatedCredentialState.IsNull() || yandexIamWorkloadIdentityFederatedCredentialState.IsUnknown() {
		return nil
	}
	var yandexIamWorkloadIdentityFederatedCredential yandexIamWorkloadIdentityFederatedCredentialModel
	diags.Append(yandexIamWorkloadIdentityFederatedCredentialState.As(ctx, &yandexIamWorkloadIdentityFederatedCredential, basetypes.ObjectAsOptions{UnhandledNullAsEmpty: true, UnhandledUnknownAsEmpty: true})...)
	if diags.HasError() {
		return nil
	}
	return expandYandexIamWorkloadIdentityFederatedCredentialModel(ctx, yandexIamWorkloadIdentityFederatedCredential, diags)
}

func expandYandexIamWorkloadIdentityFederatedCredentialModel(ctx context.Context, yandexIamWorkloadIdentityFederatedCredentialState yandexIamWorkloadIdentityFederatedCredentialModel, diags *diag.Diagnostics) *workload.FederatedCredential {
	value := &workload.FederatedCredential{}
	value.SetCreatedAt(converter.ParseTimestamp(yandexIamWorkloadIdentityFederatedCredentialState.CreatedAt.ValueString(), diags))
	value.SetExternalSubjectId(yandexIamWorkloadIdentityFederatedCredentialState.ExternalSubjectId.ValueString())
	value.SetId(yandexIamWorkloadIdentityFederatedCredentialState.FederatedCredentialId.ValueString())
	value.SetId(yandexIamWorkloadIdentityFederatedCredentialState.FederatedCredentialId.ValueString())
	value.SetFederationId(yandexIamWorkloadIdentityFederatedCredentialState.FederationId.ValueString())
	value.SetServiceAccountId(yandexIamWorkloadIdentityFederatedCredentialState.ServiceAccountId.ValueString())
	if diags.HasError() {
		return nil
	}
	return value
}
