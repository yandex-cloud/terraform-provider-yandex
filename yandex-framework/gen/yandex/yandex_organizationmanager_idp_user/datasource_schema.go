// Code generated by tfgen. DO NOT EDIT.

package yandex_organizationmanager_idp_user

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework-timeouts/resource/timeouts"
	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
)

func YandexOrganizationmanagerIdpUserDatasourceSchema(ctx context.Context) schema.Schema {
	return schema.Schema{
		Description:         "A user in the Identity Provider system.\n\n Users are created within a userpool and can authenticate to access cloud resources.\n Each user has a unique identifier, credentials, and profile information.",
		MarkdownDescription: "A user in the Identity Provider system.\n\n Users are created within a userpool and can authenticate to access cloud resources.\n Each user has a unique identifier, credentials, and profile information.",
		Attributes: map[string]schema.Attribute{

			"created_at": schema.StringAttribute{
				MarkdownDescription: "Timestamp when the user was created.",
				Description: "Timestamp when the user was created." +
					// proto paths: +
					// -> yandex.cloud.organizationmanager.v1.idp.User.created_at
					"package: yandex.cloud.organizationmanager.v1.idp\n" +
					"filename: yandex/cloud/organizationmanager/v1/idp/user.proto\n",
				Computed: true,
			},

			"email": schema.StringAttribute{
				MarkdownDescription: "User's email address.",
				Description: "User's email address." +
					// proto paths: +
					// -> yandex.cloud.organizationmanager.v1.idp.User.email
					"package: yandex.cloud.organizationmanager.v1.idp\n" +
					"filename: yandex/cloud/organizationmanager/v1/idp/user.proto\n",
				Computed: true,
			},

			"external_id": schema.StringAttribute{
				MarkdownDescription: "External identifier for federation with external identity systems.\n This ID can be used to link this user with an account in an external system.",
				Description: "External identifier for federation with external identity systems.\n This ID can be used to link this user with an account in an external system." +
					// proto paths: +
					// -> yandex.cloud.organizationmanager.v1.idp.User.external_id
					"package: yandex.cloud.organizationmanager.v1.idp\n" +
					"filename: yandex/cloud/organizationmanager/v1/idp/user.proto\n",
				Computed: true,
			},

			"family_name": schema.StringAttribute{
				MarkdownDescription: "User's last name.\n Part of the user's profile information.",
				Description: "User's last name.\n Part of the user's profile information." +
					// proto paths: +
					// -> yandex.cloud.organizationmanager.v1.idp.User.family_name
					"package: yandex.cloud.organizationmanager.v1.idp\n" +
					"filename: yandex/cloud/organizationmanager/v1/idp/user.proto\n",
				Computed: true,
			},

			"full_name": schema.StringAttribute{
				MarkdownDescription: "User's full name (display name).\n This is typically shown in the UI and used for identification purposes.",
				Description: "User's full name (display name).\n This is typically shown in the UI and used for identification purposes." +
					// proto paths: +
					// -> yandex.cloud.organizationmanager.v1.idp.User.full_name
					"package: yandex.cloud.organizationmanager.v1.idp\n" +
					"filename: yandex/cloud/organizationmanager/v1/idp/user.proto\n",
				Computed: true,
			},

			"given_name": schema.StringAttribute{
				MarkdownDescription: "User's first name.\n Part of the user's profile information.",
				Description: "User's first name.\n Part of the user's profile information." +
					// proto paths: +
					// -> yandex.cloud.organizationmanager.v1.idp.User.given_name
					"package: yandex.cloud.organizationmanager.v1.idp\n" +
					"filename: yandex/cloud/organizationmanager/v1/idp/user.proto\n",
				Computed: true,
			},

			"phone_number": schema.StringAttribute{
				MarkdownDescription: "User's phone number.",
				Description: "User's phone number." +
					// proto paths: +
					// -> yandex.cloud.organizationmanager.v1.idp.User.phone_number
					"package: yandex.cloud.organizationmanager.v1.idp\n" +
					"filename: yandex/cloud/organizationmanager/v1/idp/user.proto\n",
				Computed: true,
			},

			"status": schema.StringAttribute{
				MarkdownDescription: "Current status of the user.\n Determines whether the user can authenticate and access the system.",
				Description: "Current status of the user.\n Determines whether the user can authenticate and access the system." +
					// proto paths: +
					// -> yandex.cloud.organizationmanager.v1.idp.User.status
					"package: yandex.cloud.organizationmanager.v1.idp\n" +
					"filename: yandex/cloud/organizationmanager/v1/idp/user.proto\n",
				Computed: true,
			},

			"updated_at": schema.StringAttribute{
				MarkdownDescription: "Timestamp when the user was last updated.",
				Description: "Timestamp when the user was last updated." +
					// proto paths: +
					// -> yandex.cloud.organizationmanager.v1.idp.User.updated_at
					"package: yandex.cloud.organizationmanager.v1.idp\n" +
					"filename: yandex/cloud/organizationmanager/v1/idp/user.proto\n",
				Computed: true,
			},

			"user_id": schema.StringAttribute{
				MarkdownDescription: "ID of the user to return.",
				Description: "ID of the user to return." +
					// proto paths: +
					// -> yandex.cloud.organizationmanager.v1.idp.GetUserRequest.user_id
					// -> yandex.cloud.organizationmanager.v1.idp.User.id
					"package: yandex.cloud.organizationmanager.v1.idp\n" +
					"filename: yandex/cloud/organizationmanager/v1/idp/user_service.proto\n",
				Optional: true,
				Computed: true,

				Validators: []validator.String{
					stringvalidator.LengthBetween(0, 50),
				},
			},

			"id": schema.StringAttribute{
				MarkdownDescription: "ID of the user to return.",
				Description: "ID of the user to return." +
					// proto paths: +
					// -> yandex.cloud.organizationmanager.v1.idp.GetUserRequest.user_id
					// -> yandex.cloud.organizationmanager.v1.idp.User.id
					"package: yandex.cloud.organizationmanager.v1.idp\n" +
					"filename: yandex/cloud/organizationmanager/v1/idp/user_service.proto\n",
				Optional: true,
				Computed: true,

				Validators: []validator.String{
					stringvalidator.LengthBetween(0, 50),
				},
			},

			"username": schema.StringAttribute{
				MarkdownDescription: "Username used for authentication.\n Usually in the format of an email address.",
				Description: "Username used for authentication.\n Usually in the format of an email address." +
					// proto paths: +
					// -> yandex.cloud.organizationmanager.v1.idp.User.username
					"package: yandex.cloud.organizationmanager.v1.idp\n" +
					"filename: yandex/cloud/organizationmanager/v1/idp/user.proto\n",
				Computed: true,
			},

			"userpool_id": schema.StringAttribute{
				MarkdownDescription: "ID of the userpool this user belongs to.\n To get the userpool ID, make a [UserpoolService.List] request.",
				Description: "ID of the userpool this user belongs to.\n To get the userpool ID, make a [UserpoolService.List] request." +
					// proto paths: +
					// -> yandex.cloud.organizationmanager.v1.idp.User.userpool_id
					"package: yandex.cloud.organizationmanager.v1.idp\n" +
					"filename: yandex/cloud/organizationmanager/v1/idp/user.proto\n",
				Computed: true,
			},
			"timeouts": timeouts.AttributesAll(ctx),
		},

		Blocks: map[string]schema.Block{},
	}
}
