// Code generated by tfgen. DO NOT EDIT.

package yandex_cloudregistry_registry

import (
	"context"
	"time"

	"github.com/hashicorp/terraform-plugin-framework-timeouts/resource/timeouts"
	"github.com/hashicorp/terraform-plugin-framework/attr"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
	cloudregistry "github.com/yandex-cloud/go-genproto/yandex/cloud/cloudregistry/v1"
)

type yandexCloudregistryRegistryDatasourceModel struct {
	CreatedAt   types.String   `tfsdk:"created_at"`
	Description types.String   `tfsdk:"description"`
	FolderId    types.String   `tfsdk:"folder_id"`
	Kind        types.String   `tfsdk:"kind"`
	Labels      types.Map      `tfsdk:"labels"`
	ModifiedAt  types.String   `tfsdk:"modified_at"`
	Name        types.String   `tfsdk:"name"`
	Properties  types.Map      `tfsdk:"properties"`
	RegistryId  types.String   `tfsdk:"registry_id"`
	ID          types.String   `tfsdk:"id"`
	Status      types.String   `tfsdk:"status"`
	Type        types.String   `tfsdk:"type"`
	Timeouts    timeouts.Value `tfsdk:"timeouts"`
}

func (m *yandexCloudregistryRegistryDatasourceModel) GetCreatedAt() types.String {
	return m.CreatedAt
}
func (m *yandexCloudregistryRegistryDatasourceModel) GetDescription() types.String {
	return m.Description
}
func (m *yandexCloudregistryRegistryDatasourceModel) GetFolderId() types.String {
	return m.FolderId
}
func (m *yandexCloudregistryRegistryDatasourceModel) GetKind() types.String {
	return m.Kind
}
func (m *yandexCloudregistryRegistryDatasourceModel) GetLabels() types.Map {
	return m.Labels
}
func (m *yandexCloudregistryRegistryDatasourceModel) GetModifiedAt() types.String {
	return m.ModifiedAt
}
func (m *yandexCloudregistryRegistryDatasourceModel) GetName() types.String {
	return m.Name
}
func (m *yandexCloudregistryRegistryDatasourceModel) GetProperties() types.Map {
	return m.Properties
}
func (m *yandexCloudregistryRegistryDatasourceModel) GetRegistryId() types.String {
	return m.RegistryId
}
func (m *yandexCloudregistryRegistryDatasourceModel) GetID() types.String {
	return m.ID
}
func (m *yandexCloudregistryRegistryDatasourceModel) GetStatus() types.String {
	return m.Status
}
func (m *yandexCloudregistryRegistryDatasourceModel) GetType() types.String {
	return m.Type
}

func NewYandexCloudregistryRegistryDatasourceModel() yandexCloudregistryRegistryDatasourceModel {
	return yandexCloudregistryRegistryDatasourceModel{
		CreatedAt:   types.StringNull(),
		Description: types.StringNull(),
		FolderId:    types.StringNull(),
		Kind:        types.StringNull(),
		Labels:      types.MapNull(types.StringType),
		ModifiedAt:  types.StringNull(),
		Name:        types.StringNull(),
		Properties:  types.MapNull(types.StringType),
		RegistryId:  types.StringNull(),
		ID:          types.StringNull(),
		Status:      types.StringNull(),
		Type:        types.StringNull(),
	}
}

func yandexCloudregistryRegistryDatasourceModelFillUnknown(target yandexCloudregistryRegistryDatasourceModel) yandexCloudregistryRegistryDatasourceModel {
	if target.CreatedAt.IsUnknown() || target.CreatedAt.IsNull() {
		target.CreatedAt = types.StringNull()
	}
	if target.Description.IsUnknown() || target.Description.IsNull() {
		target.Description = types.StringNull()
	}
	if target.FolderId.IsUnknown() || target.FolderId.IsNull() {
		target.FolderId = types.StringNull()
	}
	if target.Kind.IsUnknown() || target.Kind.IsNull() {
		target.Kind = types.StringNull()
	}
	if target.Labels.IsUnknown() || target.Labels.IsNull() {
		target.Labels = types.MapNull(types.StringType)
	}
	if target.ModifiedAt.IsUnknown() || target.ModifiedAt.IsNull() {
		target.ModifiedAt = types.StringNull()
	}
	if target.Name.IsUnknown() || target.Name.IsNull() {
		target.Name = types.StringNull()
	}
	if target.Properties.IsUnknown() || target.Properties.IsNull() {
		target.Properties = types.MapNull(types.StringType)
	}
	if target.RegistryId.IsUnknown() || target.RegistryId.IsNull() {
		target.RegistryId = types.StringNull()
	}
	if target.ID.IsUnknown() || target.ID.IsNull() {
		target.ID = types.StringNull()
	}
	if target.Status.IsUnknown() || target.Status.IsNull() {
		target.Status = types.StringNull()
	}
	if target.Type.IsUnknown() || target.Type.IsNull() {
		target.Type = types.StringNull()
	}
	return target
}

var yandexCloudregistryRegistryDatasourceModelType = types.ObjectType{
	AttrTypes: map[string]attr.Type{
		"created_at":  types.StringType,
		"description": types.StringType,
		"folder_id":   types.StringType,
		"kind":        types.StringType,
		"labels":      types.MapType{ElemType: types.StringType},
		"modified_at": types.StringType,
		"name":        types.StringType,
		"properties":  types.MapType{ElemType: types.StringType},
		"registry_id": types.StringType,
		"id":          types.StringType,
		"status":      types.StringType,
		"type":        types.StringType,
		"timeouts":    timeouts.AttributesAll(context.Background()).GetType(),
	},
}

func flattenYandexCloudregistryRegistryDatasource(ctx context.Context,
	yandexCloudregistryRegistryDatasource *cloudregistry.Registry,
	state yandexCloudregistryRegistryDatasourceModel,
	to timeouts.Value,
	diags *diag.Diagnostics) types.Object {
	if yandexCloudregistryRegistryDatasource == nil {
		return types.ObjectNull(yandexCloudregistryRegistryDatasourceModelType.AttrTypes)
	}
	value, diag := types.ObjectValueFrom(ctx, yandexCloudregistryRegistryDatasourceModelType.AttrTypes, yandexCloudregistryRegistryDatasourceModel{
		CreatedAt:   types.StringValue(yandexCloudregistryRegistryDatasource.GetCreatedAt().AsTime().Format(time.RFC3339)),
		Description: types.StringValue(yandexCloudregistryRegistryDatasource.GetDescription()),
		FolderId:    types.StringValue(yandexCloudregistryRegistryDatasource.GetFolderId()),
		Kind:        types.StringValue(yandexCloudregistryRegistryDatasource.GetKind().String()),
		Labels:      flattenYandexCloudregistryRegistryLabels(ctx, yandexCloudregistryRegistryDatasource.GetLabels(), state.Labels, diags),
		ModifiedAt:  types.StringValue(yandexCloudregistryRegistryDatasource.GetModifiedAt().AsTime().Format(time.RFC3339)),
		Name:        types.StringValue(yandexCloudregistryRegistryDatasource.GetName()),
		Properties:  flattenYandexCloudregistryRegistryProperties(ctx, yandexCloudregistryRegistryDatasource.GetProperties(), state.Properties, diags),
		RegistryId:  types.StringValue(yandexCloudregistryRegistryDatasource.GetId()),
		ID:          types.StringValue(yandexCloudregistryRegistryDatasource.GetId()),
		Status:      types.StringValue(yandexCloudregistryRegistryDatasource.GetStatus().String()),
		Type:        types.StringValue(yandexCloudregistryRegistryDatasource.GetType().String()),
		Timeouts:    to,
	})
	diags.Append(diag...)
	return value
}
